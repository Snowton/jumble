{"version":3,"sources":["words.jsx","InputArea.jsx","Letter.jsx","Feedback.jsx","GameArea.jsx","End.jsx","App.js","index.js"],"names":["words","InputArea","props","className","input","map","element","letter","Letter","index","style","handleClick","clicked","key","id","onClick","event","Feedback","matches","useMediaQuery","success","nextWord","GameArea","useState","setInput","word","setClicked","target","innerHTML","ID","prev","String","found","find","item","filter","width","length","split","reduce","realWord","End","reset","App","currentWord","setCurrentWord","oldWord","jumbled","Math","floor","random","push","splice","jumbleWord","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.152d18e4.chunk.js","sourcesContent":["const words = [\n    \"WORDS\",\n    \"BONJOUR\",\n    \"WORLD\",\n    \"AGAIN\",\n    \"HARMONY\",\n    \"FINISH\",\n    \"POUND\",\n    \"AWESOME\",\n    \"CLUTCH\",\n    \"TROUBLE\",\n    \"TRIUMPH\",\n    \"WELCOME\",\n    \"ALIVE\",\n    \"MOTION\",\n    \"NOISE\",\n    \"OCEAN\",\n    \"REDUNDANT\",\n    \"RECITE\",\n    \"FURRY\",\n    \"SCOLD\",\n    \"PONDER\",\n    \"ICICLE\",\n    \"AMBITIOUS\",\n    \"UNDO\",\n    \"PREVIOUS\",\n    \"DISTINCT\",\n    \"GHOST\",\n    \"ELBOW\",\n    \"CONNECT\",\n    \"FAMILIAR\",\n    \"ELITE\",\n    \"HEAT\",\n    \"SUPPLY\",\n    \"SMASH\",\n    \"QUARTZ\",\n    \"SASHAY\",\n    \"FAREWELL\"\n]\n\nexport default words;","import React from \"react\";\n\nfunction InputArea(props) {\n    return <div className=\"container input-area\">{props.input.map(element => element.letter)}</div>;\n}\n\nexport default InputArea;","import React from \"react\";\n\nfunction Letter(props) {\n    const index = props.index;\n    const style = props.style;\n    const handleClick = props.handleClick;\n    const letter = props.letter;\n\n    return <div \n    className=\"letter\" \n    style={style}>\n        <div className={props.clicked ? \"card pressed\" : \"card\"} key={index} id={index} onClick={(event) => handleClick(event)}>{letter}</div>\n    </div>;\n}\n\nexport default Letter;","import React from \"react\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nfunction Feedback(props) {\n    const matches = useMediaQuery('(max-width:900px)');\n\n    if (props.success) {\n        return <div>\n        <p>Good job! You got it right!</p>\n        <button className={matches ? \"btn btn-dark\" : \"btn btn-outline-dark\"} onClick={props.nextWord}>NEXT WORD</button>\n        </div>;\n    } else {\n        return <div>Not quite, try again</div>;\n    }\n}\n\nexport default Feedback;","import React, { useState } from \"react\";\nimport InputArea from \"./InputArea\";\nimport Letter from \"./Letter\";\nimport Feedback from \"./Feedback\";\n\nfunction GameArea(props) {\n    const [input, setInput] = useState([]);\n    const [clicked, setClicked] = useState(props.word.map(element => false));\n\n    function handleClick(event) {\n        const {innerHTML, id:ID} = event.target;\n        setClicked(prev => prev.map((element, index) => String(index) === ID ? !element : element));\n        \n        const found = input.find(item => item.id === ID);\n        if (found) {\n            setInput(prev => prev.filter(element => element.id !== ID));\n        } else {\n            setInput(prev => (\n                [...prev, {letter: innerHTML, id: ID}]\n                ));\n        }\n    }\n\n    function nextWord() {\n        setInput([]);\n        setClicked(props.nextWord().split(\"\").map(element => false));\n    }\n\n    const width = 100 / props.word.length;\n    const style = {\n        width: width + \"%\",\n    }\n\n    return <div className=\"container yoyo\">{props.word.map((letter, index) => \n    <Letter clicked={clicked[index]} index={index} style={style} letter={letter} handleClick={handleClick}/>)}\n    <InputArea input={input}/>\n    {input.length === props.word.length && \n    <Feedback nextWord={nextWord}\n    success={input.reduce((word, item) => word + item.letter, \"\") === props.realWord}/>}\n    </div>;\n}\n\nexport default GameArea;","import React from \"react\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nfunction End(props) {\n    const matches = useMediaQuery('(max-width:900px)');\n\n    return <div className=\"end\"><h2>Well Done!</h2><button \n    className={matches ? \"btn btn-lg btn-dark\" : \"btn btn-lg btn-outline-dark\"}\n    onClick={props.reset}>PLAY AGAIN</button></div>\n}\n\nexport default End;","import React, { useState } from 'react';\nimport words from \"./words\";\nimport GameArea from \"./GameArea\";\nimport End from \"./End\";\n\nfunction App() {\n\n  const [currentWord, setCurrentWord] = useState(0);\n\n  function jumbleWord(oldWord) {\n    const word = oldWord.split(\"\");\n    const jumbled = [];\n    while(word.length > 0) {\n      const index = Math.floor(Math.random() * word.length);\n      const letter = word[index];\n      jumbled.push(letter);\n      word.splice(index, 1);\n    }\n    return jumbled;\n  }\n\n  function nextWord() {\n    setCurrentWord(prev => prev + 1);\n    return currentWord === words.length - 1 ? words[0] : words[currentWord + 1];\n  }\n\n  function reset() {\n    setCurrentWord(0);\n  }\n\n  return (\n    <div>\n    <header><h1>Jumble</h1></header>\n    {currentWord < words.length ? \n    <GameArea nextWord={nextWord} realWord={words[currentWord]} word={jumbleWord(words[currentWord])}/> :\n    <End reset={reset}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}